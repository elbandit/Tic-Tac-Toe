// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Wrox.BDD.Specs.UAT.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Drawing A Game")]
    public partial class DrawingAGameFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PlayerDrawsAGame.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Drawing A Game", "  In order for a game to end with no winner\r\n  As a player \r\n  I must place all m" +
                    "y tokens", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Use all tokens")]
        public virtual void UseAllTokens()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Use all tokens", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
    testRunner.Given("that I have started a new game");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "player",
                        "row",
                        "column"});
            table1.AddRow(new string[] {
                        "X",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "O",
                        "0",
                        "2"});
            table1.AddRow(new string[] {
                        "X",
                        "1",
                        "2"});
            table1.AddRow(new string[] {
                        "O",
                        "1",
                        "0"});
            table1.AddRow(new string[] {
                        "X",
                        "0",
                        "0"});
            table1.AddRow(new string[] {
                        "O",
                        "2",
                        "2"});
            table1.AddRow(new string[] {
                        "X",
                        "0",
                        "1"});
            table1.AddRow(new string[] {
                        "O",
                        "2",
                        "1"});
#line 8
 testRunner.And("the following moves are played:", ((string)(null)), table1);
#line 18
    testRunner.When("a player types in the coordinates \"2,0\"");
#line hidden
#line 19
    testRunner.Then("I should see the following displayed:", " X | X | O \r\n-----------\r\n O | X | X \r\n-----------\r\n X | O | O \r\n\r\nThe game has e" +
                    "nded in a draw!\r\n", ((TechTalk.SpecFlow.Table)(null)));
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
